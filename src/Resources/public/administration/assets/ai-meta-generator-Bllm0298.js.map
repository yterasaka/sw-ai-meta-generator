{"version":3,"file":"ai-meta-generator-Bllm0298.js","sources":["../../../app/administration/src/service/ai-meta-generator-api.service.js","../../../app/administration/src/extension/sw-product/component/sw-product-seo-form/sw-product-seo-form.html.twig","../../../app/administration/src/extension/sw-product/component/sw-product-seo-form/index.js"],"sourcesContent":["const { Application } = Shopware;\n\nclass AiMetaGeneratorApiService {\n  constructor(httpClient, loginService) {\n    this.httpClient = httpClient;\n    this.loginService = loginService;\n  }\n\n  generateMetadata(productData) {\n    const headers = this.getBasicHeaders();\n\n    return this.httpClient\n      .post(\"_action/ai-meta-generator/generate\", productData, { headers })\n      .then((response) => {\n        console.log(\"HTTP request successful:\", response);\n        return response.data;\n      })\n      .catch((error) => {\n        console.error(\"HTTP request failed:\", error);\n        console.error(\"Error response:\", error.response);\n        console.error(\"Error status:\", error.response?.status);\n        console.error(\"Error data:\", error.response?.data);\n        throw error;\n      });\n  }\n\n  getBasicHeaders() {\n    return {\n      Accept: \"application/vnd.api+json\",\n      Authorization: `Bearer ${this.loginService.getToken()}`,\n      \"Content-Type\": \"application/json\",\n    };\n  }\n}\n\nApplication.addServiceProvider(\"aiMetaGeneratorApiService\", (container) => {\n  const initContainer = Application.getContainer(\"init\");\n\n  return new AiMetaGeneratorApiService(\n    initContainer.httpClient,\n    container.loginService\n  );\n});\n","{% block sw_product_seo_form_keywords %}\n    {% parent %}\n    \n    {% block sw_product_seo_form_ai_generator_button %}\n    <div class=\"sw-field sw-field--default\">\n        <div class=\"sw-field__label\">\n            <label class=\"sw-field__label-text\">\n                {{ $tc('sw-product.seoForm.generateMetadataLabel') }}\n            </label>\n            <sw-help-text \n                :text=\"$tc('sw-product.seoForm.generateMetadataHelpText')\">\n            </sw-help-text>\n        </div>\n        <div class=\"sw-field__content\">\n            <sw-button \n                variant=\"primary\" \n                size=\"small\"\n                :disabled=\"isGenerating || !canGenerateMetadata\"\n                :isLoading=\"isGenerating\"\n                @click=\"onGenerateMetadata\">\n                {{ $tc('sw-product.seoForm.generateMetadata') }}\n            </sw-button>\n        </div>\n    </div>\n    {% endblock %}\n{% endblock %}","import template from \"./sw-product-seo-form.html.twig\";\n\nconst { Component, Mixin } = Shopware;\n\nComponent.override(\"sw-product-seo-form\", {\n  template,\n\n  inject: [\"aiMetaGeneratorApiService\"],\n\n  mixins: [Mixin.getByName(\"notification\")],\n\n  data() {\n    return {\n      isGenerating: false,\n    };\n  },\n\n  computed: {\n    canGenerateMetadata() {\n      return (\n        this.product &&\n        this.product.name &&\n        this.product.name.trim() !== \"\" &&\n        this.product.description &&\n        this.product.description.trim() !== \"\"\n      );\n    },\n  },\n\n  methods: {\n    async onGenerateMetadata() {\n      if (!this.product) {\n        this.createNotificationError({\n          message: this.$tc(\"sw-product.seoForm.errorProductNotFound\"),\n        });\n        return;\n      }\n\n      if (!this.canGenerateMetadata) {\n        this.createNotificationError({\n          message: this.$tc(\"sw-product.seoForm.errorMissingRequiredFields\"),\n        });\n        return;\n      }\n\n      this.isGenerating = true;\n      console.log(\"Starting metadata generation...\");\n\n      try {\n        const currentLanguageId = Shopware.Context.api.languageId;\n\n        const requestData = {\n          productId: this.product.id,\n          productName: this.product.name,\n          description: this.product.description,\n          languageId: currentLanguageId,\n        };\n\n        console.log(\"Calling API service with data:\", requestData);\n\n        const response = await this.aiMetaGeneratorApiService.generateMetadata(\n          requestData\n        );\n\n        console.log(\"API service response:\", response);\n\n        if (response.success) {\n          this.updateProductMetadata(response.data);\n          this.createNotificationSuccess({\n            message: this.$tc(\"sw-product.seoForm.metadataGeneratedSuccess\"),\n          });\n        } else {\n          throw new Error(response.error || \"Unknown error occurred\");\n        }\n      } catch (error) {\n        console.error(\"Error generating metadata:\", error);\n        this.createNotificationError({\n          message:\n            this.$tc(\"sw-product.seoForm.errorGeneratingMetadata\") +\n            \": \" +\n            error.message,\n        });\n      } finally {\n        this.isGenerating = false;\n        console.log(\"Metadata generation completed\");\n      }\n    },\n\n    updateProductMetadata(metadata) {\n      if (!this.product) {\n        console.error(\"Product not found\");\n        return;\n      }\n\n      if (metadata.metaTitle) {\n        // this.$set(this.product, \"metaTitle\", metadata.metaTitle);\n        // Vue 3: this.$set を直接的な代入に変更\n        this.product.metaTitle = metadata.metaTitle;\n      }\n\n      if (metadata.metaDescription) {\n        // this.$set(this.product, \"metaDescription\", metadata.metaDescription);\n        // Vue 3: this.$set を直接的な代入に変更\n        this.product.metaDescription = metadata.metaDescription;\n      }\n\n      if (metadata.keywords) {\n        // this.$set(this.product, \"keywords\", metadata.keywords);\n        // Vue 3: this.$set を直接的な代入に変更\n        this.product.keywords = metadata.keywords;\n      }\n\n      this.$emit(\"product-changed\");\n\n      console.log(\"Product metadata updated:\", {\n        metaTitle: this.product.metaTitle,\n        metaDescription: this.product.metaDescription,\n        keywords: this.product.keywords,\n      });\n    },\n  },\n});\n"],"names":["Application","AiMetaGeneratorApiService","httpClient","loginService","productData","headers","response","error","_a","_b","container","initContainer","template","Component","Mixin","currentLanguageId","requestData","metadata"],"mappings":"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"}